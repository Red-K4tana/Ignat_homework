{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","to","Message","props","className","s","message","block_ava","ava","src","avatar","alt","block_content","content","name","text","block_time","time","messageData","HW1","Affair","affair","affairItem","_id","priority","high","middle","low","affair_button","onClick","itemId","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","main_affairs","block_button","value","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","x","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","length","inputOk","someClass","onChange","onKeyPress","event","key","buttonAdd","errorSpan","GreetingContainer","users","addUserCallback","setName","setError","currentTarget","console","log","objName","v1","trim","alert","HW3","setUsers","SuperInputText","type","onChangeText","onEnter","spanClassName","margClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","e","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","siteForError","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","PreJunior","Junior","JuniorPlus","Error404","PATH","HW5","path","element","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.23c80239.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__dtXXa\",\"block_ava\":\"Message_block_ava__1RWlu\",\"ava\":\"Message_ava__1Zm1-\",\"content\":\"Message_content__3SSSM\",\"text\":\"Message_text__vqjG8\",\"name\":\"Message_name__sJxra\",\"time\":\"Message_time__3s3Du\",\"block_time\":\"Message_block_time__3e07R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__1vmRs\",\"affair_button\":\"Affair_affair_button__1bnUk\",\"affairItem\":\"Affair_affairItem__3cYba\",\"high\":\"Affair_high__2_dzI\",\"middle\":\"Affair_middle__35k_m\",\"low\":\"Affair_low__IJUtT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1acy3\",\"errorSpan\":\"Greeting_errorSpan__10Jd2\",\"error\":\"Greeting_error__WmTDo\",\"inputOk\":\"Greeting_inputOk__3jYRW\",\"buttonAdd\":\"Greeting_buttonAdd__2K0Rd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__12ROt\",\"column\":\"HW4_column__2MkQz\",\"testSpanError\":\"HW4_testSpanError__1K23x\",\"siteForError\":\"HW4_siteForError__KKDJe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_affairs\":\"Affairs_main_affairs__3uk_H\",\"block_button\":\"Affairs_block_button__11yeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__cZHBs\",\"errorInput\":\"SuperInputText_errorInput__3VDfk\",\"error\":\"SuperInputText_error__1oc2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1S_Ft\",\"red\":\"SuperButton_red__2oUwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__prSe2\",\"spanClassName\":\"SuperCheckbox_spanClassName__1S4Wx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2KNGR\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nfunction Header() {\n    return (\n        <div>\n            <NavLink to='/pre-junior'>PreJunior</NavLink>\n            <NavLink to='/junior'>Junior</NavLink>\n            <NavLink to='/juniorPlus'>Junior+</NavLink>\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport s from './Message.module.css';\n\ntype messageTypeProps = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\nfunction Message(props: messageTypeProps) {\n    return (\n        <div className={s.message}>\n            <div className={s.block_ava}>\n                <div className={s.ava}>\n                    <img src={props.avatar} alt=\"\"/>\n                </div>\n            </div>\n            <div className={s.block_content}>\n                <div className={s.content}>\n                    <div className={s.name}>\n                        {props.name}\n                    </div>\n                    <div className={s.text}>\n                        {props.message}\n                    </div>\n                </div>\n            </div>\n            <div className={s.block_time}>\n                <div className={s.time}>\n                    {props.time}\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Yuki Kadono',\n    message: 'some text some text some text some text some text some text some text ',\n    time: '05.32',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affair.module.css'\n\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void// need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = (itemId: number) => {\n        props.deleteAffairCallback(itemId)\n    }// need to fix\n\n    const getPriorityStyle = () => {\n        if (props.affair.priority === 'high') return s.high\n        if (props.affair.priority === 'middle') return s.middle\n        if (props.affair.priority === 'low') return s.low\n    }\n\n    return (\n        <div className={s.affair}>\n            <div className= {s.affairItem}>\n                {props.affair._id}\n            </div>\n            <div className= {s.affairItem}>\n                {props.affair.name}\n            </div>\n            <div className= {`${s.affairItem} ${getPriorityStyle()}`}>\n                {props.affair.priority}\n            </div>\n\n            <button className={s.affair_button} onClick={() => deleteCallback(props.affair._id)}></button>\n        </div>\n    )\n}\n\nexport default Affair\n//text button","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id}\n            affair={a}//-a это элемент массива\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = (value: FilterType) => {\n        props.setFilter(value)\n    } // need to fix\n    const setHigh = (value: FilterType) => {\n        props.setFilter(value)\n    }\n    const setMiddle = (value: FilterType) => {\n        props.setFilter(value)\n    }\n    const setLow = (value: FilterType) => {\n        props.setFilter(value)\n    }\n\n    return (\n        <div className={s.main_affairs}>\n\n            {mappedAffairs}\n            <div className={s.block_button}>\n                <button onClick={() => setAll('all')}>All</button>\n                <button onClick={() => setHigh('high')}>High</button>\n                <button onClick={() => setMiddle('middle')}>Middle</button>\n                <button onClick={() => setLow('low')}>Low</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low'// need to fix any\nexport type FilterType = 'all' | AffairPriorityType\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: string\n} // need to fix any\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    /*if (filter === 'all') {\n        return affairs\n    } else if (filter === 'high') {\n        return affairs.filter(x => x.priority === filter)\n    } else if (filter === 'middle') {\n        return affairs.filter(x => x.priority === filter)\n    } else if (filter === 'low') {\n        return affairs.filter(x => x.priority === filter)\n    } else {\n        return affairs\n    }*/\n    if (filter === 'all') return affairs\n    return affairs.filter(f=>f.priority===filter)\n    // need to fix\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(x => x._id !== _id)// need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>)=> void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error.length === 0 ? s.inputOk : s.error // need to fix with (?:)\n    const onKeyPressHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            addUser()\n        }\n    }\n\n    return (\n        <div className={s.someClass}>\n\n            <input value={name} onChange={setNameCallback} onKeyPress={onKeyPressHandler} className={inputClass}/>\n            <button className={s.buttonAdd} onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n            <span className={s.errorSpan}>{error}</span>\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {v1} from \"uuid\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (objName: UserType) => void // need to fix any\n}\n\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => {\n        setName(event.currentTarget.value)\n        setError('')\n        console.log(name)\n    }\n\n    const addUser = () => {\n        let objName = { _id: v1(), 'name': name.trim()}\n        //---------------------------------------\n        if (objName.name.length === 0) {\n            setError('Алярма!!! Введите имя!')\n            return\n        }\n        addUserCallback(objName)\n        setName('')\n        alert(`Hello `+ objName.name +`!`)\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    const addUserCallback = (objName: UserType) => {\n        setUsers([...users, objName])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback}\n            />\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    margClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName, margClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            <div className={margClassName}>\n                {error && <span className={finalSpanClassName}>{error}</span>}\n            </div>\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setChecked(e.currentTarget.checked)\n    }\n    console.log(checked)\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    margClassName={s.siteForError} // нужно для создания места под error\n                    //spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox checked={checked} onChangeChecked={setChecked}>\n                    some text\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}>\n                    doth some text\n                </SuperCheckbox>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        // setEditMode() // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        // setValue()\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n\r\n            Junior - empty\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from 'react'\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            JuniorPlus - empty\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport Header from './Header'\nimport {HashRouter, Routes, Route} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/juniorPlus',\n}\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n                <Header/>\n                <Routes>\n                    <Route path={PATH.PRE_JUNIOR} element={<PreJunior />}/>\n                    <Route path={'/'} element={<PreJunior />}/>\n                    <Route path={PATH.JUNIOR} element={<Junior />}/>\n                    <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus />}/>\n                    <Route path={''} element={<Error404 />}/>\n\n                </Routes>\n\n\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}